data = read.csv("training_head.csv", header=TRUE)
source('C:/Users/Mirka/Desktop/GitHub/data-mininig-expedia-group08/expedia.R', echo=TRUE)
z<-readtable("matrixFlow 2 9 .csv")
z<-read("matrixFlow 2 9 .csv")
z<-read.table("matrixFlow 2 9 .csv")
z<-read.csv("matrixFlow29.csv")
z<-read.csv("matrixFlow 2 9.csv")
z<-read.csv("matrixFlow 2 9 .csv")
runif(2, 5000,50000)
flow<-read.table("Flow_v1.csv", header=F, sep="\t")#for tab separated file\
colnames(flow) <- c("Origin", "Destination","Commodity","Mode","Flow")
flow<-flow[!(flow$Origin>z |flow$Origin<a | flow$Destination>z | flow$Destination<a ),] #only use flows for necessary nodes
flow<-read.table("Flow_v1.csv", header=F, sep="\t")#for tab separated file\
setwd("~/GitHub/project")
flow<-read.table("Flow_v1.csv", header=F, sep="\t")#for tab separated file\
colnames(flow) <- c("Origin", "Destination","Commodity","Mode","Flow")
flow<-flow[!(flow$Origin>z |flow$Origin<a | flow$Destination>z | flow$Destination<a ),] #only use flows for necessary nodes
a<-57 ### These values are to select a range of OD nodes where all 3 modes are present
z<-66
colnames(flow) <- c("Origin", "Destination","Commodity","Mode","Flow")
flow<-flow[!(flow$Origin>z |flow$Origin<a | flow$Destination>z | flow$Destination<a ),] #only use flows for necessary nodes
commodities <- as.character(unique(flow$Commodity))#cast to string
for (com in commodities) {
print(paste(com))
fflow <- flow[(flow$Commodity == com) & (flow$Mode == mode_id),c("Origin","Destination","Flow")]#select correct rows, fill up with these columns
matrixflow <- matrix(0,n,n)
if (nrow(fflow) > 0) {
# scan line by line the fflow
for (i in 1:nrow(fflow)) {
line <- fflow[i,]
if (line$Origin > z | line$Destination > z |line$Origin < a | line$Destination < a) next;
matrixflow[line$Origin-a+1, line$Destination-a+1] <- line$Flow
}
}
if ((flow$Commodity != "9") & (flow$Mode == 2)) {
matrixflow[line$Origin-a+1, line$Destination-a+1] <-runif(1, 5000,50000)
}
write.table(matrixflow, paste("matrixFlow",mode_id,com,".csv"), row.names=T, col.names=T)#csv. or table not sure
eval.parent(substitute(container[[com]] <- matrixflow))
}
}
fillFlow <- function(container, mode_id) { flow<-read.table("Flow_v1.csv", header=F, sep="\t")#for tab separated file\
colnames(flow) <- c("Origin", "Destination","Commodity","Mode","Flow")
flow<-flow[!(flow$Origin>z |flow$Origin<a | flow$Destination>z | flow$Destination<a ),] #only use flows for necessary nodes
commodities <- as.character(unique(flow$Commodity))#cast to string
for (com in commodities) {
print(paste(com))
fflow <- flow[(flow$Commodity == com) & (flow$Mode == mode_id),c("Origin","Destination","Flow")]#select correct rows, fill up with these columns
matrixflow <- matrix(0,n,n)
if (nrow(fflow) > 0) {
# scan line by line the fflow
for (i in 1:nrow(fflow)) {
line <- fflow[i,]
if (line$Origin > z | line$Destination > z |line$Origin < a | line$Destination < a) next;
matrixflow[line$Origin-a+1, line$Destination-a+1] <- line$Flow
}
}
if ((flow$Commodity != "9") & (flow$Mode == 2)) {
matrixflow[line$Origin-a+1, line$Destination-a+1] <-runif(1, 5000,50000)
}
write.table(matrixflow, paste("matrixFlow",mode_id,com,".csv"), row.names=T, col.names=T)#csv. or table not sure
eval.parent(substitute(container[[com]] <- matrixflow))
}
}
realFlow <- list()
realflow<-createRealFlow()
source('~/.active-rstudio-document', echo=TRUE)
realflow<-createRealFlow()
warnings()
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
warnings()
if (flow[(flow$Commodity !="9") & (flow$Mode == 2)]) {
matrixflow[line$Origin-a+1, line$Destination-a+1] <-runif(1, 49999,50000)
}
flow<-read.table("Flow_v1.csv", header=F, sep="\t")#for tab separated file\
colnames(flow) <- c("Origin", "Destination","Commodity","Mode","Flow")
a<-57 ### These values are to select a range of OD nodes where all 3 modes are present
z<-66
commodities <- as.character(unique(flow$Commodity))#cast to string
fflow <- flow[(flow$Commodity =='1') & (flow$Mode == 1),c("Origin","Destination","Flow")]#select correct rows, fill up with these columns
View(fflow)
View(flow)
flow<-flow[!(flow$Origin>z |flow$Origin<a | flow$Destination>z | flow$Destination<a ),] #only use flows for necessary nodes
View(flow)
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
flow$Commodity
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
flow$Mode
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
View(flow)
mat <- matrix(data = runif(100, rate = 3999), nrow = 10, ncol = 10)
mat<-matrix( rnorm(10*10,mean=30000,sd=10000), 10, 10)
mat
if (mode_id==2){
for (com in 1:8){
mat<-matrix(rnorm(10*10,mean=30000,sd=10000), 10, 10)
write.table(mat, paste("matrixFlow",mode_id,com,".csv"), row.names=T, col.names=T)
}
}
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
source('~/GitHub/project/themodel.R')
m<-ceiling(runif(10, 0, 10^3))
m
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
mat<-matrix(ceiling(rnorm(10*10,mean=30000,sd=10000)))
mat
mat<-matrix(ceiling(rnorm(10*10,mean=30000,sd=10000),10,10))
mat<-matrix(int(rnorm(10*10,mean=30000,sd=10000),10,10))
mat<-matrix((ceiling(rnorm(10*10),mean=30000,sd=10000),10,10)
mat<-matrix((ceiling(rnorm(10*10)),mean=30000,sd=10000),10,10))
mat<-matrix(rnorm(10*10,mean=30000,sd=10000), 10, 10)
mat
realflow<-createRealFlow()
source('~/GitHub/project/themodel.R')
realflow<-createRealFlow()
matrixFlow 2 3.csv[1,1]
mm<-read.csv("matrixFlow 2 3.csv")
mm<-read.csv("matrixFlow23.csv")
mm<-read.csv("matrixFlow 2 3")
